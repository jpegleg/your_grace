#!/usr/bin/env bash

# Run interactive administrative pre-defined actions.

# If not root, abort.
if [ $UID -ne 0 ]; then
  echo "Not UID 0 root! Will not execute the administrative cli. Exiting..."
  exit 1
else
  echo ">>> ... super user"
fi

# function section:

maintmenu () {
  PS3='admin cli | execute maintenance <<< number seclection ⛁)  '
  maintmenu=("download packages" "update system" "reboot" "single user mode" "update admin cli from github" "restart cli session")
  select selecta in "${maintmenu[@]}"; do
    case $selecta in
      "download packages")
        echo
        echo "Downloading new packages 🪄"
        aptitude update -y
        echo
      ;;
      "update system")
        echo
        echo "Updating system 🏗️ "
        aptitude upgrade -y
      ;;
      "reboot")
        echo
        echo "Rebooting system... ⛹️"
        reboot
      ;;
      "single user mode")
        echo
        echo "Entering single user mode..."
        init 1
      ;;
      "update admin cli from github")
        echo
        echo "Pulling new admin cli from github..."
        cd /var/tmp
        rm -rf your_grace
        git clone https://github.com/jpegleg/your_grace
        cp your_grace/your_grace.runtime ~/.bashrc 
        cp your_grace/your_grace.runtime /etc/your_grace.runtime
        chmod +x /etc/your_grace.runtime
        trapexit
      ;;
      "restart cli session")
        clear
        echo "User exit restart called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done

}

usersmenu () {
  PS3='admin cli | users options <<< number seclection ⛁)  '
  maintmenu=("add user" "list all users and password hashes" "change user password" "remove user" "add user to secondary group" "remove user from secondary group" "create new group" "delete group" "restart cli session")
  select selecta in "${maintmenu[@]}"; do
    case $selecta in
      "remove user")
        echo
        echo "remove user 🪄"
        echo
        echo "enter the username of the user to remove from $(hostname):"
        read delusername
        echo "deleting $delusername from $(hostname) $(date +%Y%m%d%H%M%S)"
        deluser --remove-home $delusername
        echo
        echo
      ;;
      "list all users and password hashes")
        echo
        echo "list all users 🪄"
        echo
        cat /etc/shadow | while read line; do 
          echo $line;
          sleep 1;
        done
        echo
        echo
      ;;
      "change user password")
        echo
        echo "change user password 🪄"
        echo
        echo "enter username to change password for:"
        read changeuserpass
        echo "changing password for $changeuserpass"
        echo
        passwd $changeuserpass
        echo
        echo
      ;;
      "add user")
        echo
        echo "add user 🪄"
        echo
        echo "enter the username of the user to add to $(hostname):"
        read addusername
        echo "adding $addusername to $(hostname) $(date +%Y%m%d%H%M%S)"
        useradd -m $addusername
        echo
        echo
      ;;
      "add user to secondary group")
        echo
        echo "add user to group 🪄"
        echo
        echo "enter the username of the user:"
        read addusergroup
        echo "enter the name of the group to add $addusergroup to:"
        read togroup
        echo "adding $addusergroup to $togroup on $(hostname) $(date +%Y%m%d%H%M%S)"
        usermod $addusergroup -G $togroup
        echo
        echo
      ;;
      "remove user from secondary group")
        echo
        echo "remove user from group 🪄"
        echo
        echo "enter the username of the user to add to $(hostname):"
        read rmoveuserfrom
        echo "enter the secondary group to remove the user from on $(hostname):"
        read removefromgroup
        echo "removing $rmoveuserfrom from $removefromgroup on $(hostname) $(date +%Y%m%d%H%M%S)"
        usermod $rmoveuserfrom -W $removefromgroup
        echo
        echo
      ;;
      "create new group")
        echo
        echo "create new group 🪄"
        echo
        echo "enter the group name to be added to $(hostname):"
        read addgroup
        echo "adding $addgroup on $(hostname) $(date +%Y%m%d%H%M%S)"
        groupadd $addgroup
        echo
        echo
      ;;
      "delete group")
        echo
        echo "delete group 🪄"
        echo
        echo "enter the group name to be removed from $(hostname):"
        read delgroup
        echo "removing $delgroup on $(hostname) $(date +%Y%m%d%H%M%S)"
        groupdel $delgroup
        echo
        echo
      ;;
      "restart cli session")
        clear
        echo "User exit called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done

}

secmenu () {
  PS3='admin cli | security options <<< number seclection ⛁)  '
  maintmenu=("change password" "list all users and password hashes" "change user password" "shutdown network" "restart network" "shutdown ssh" "restart ssh" "power off system" "restart cli session")
  select selecta in "${maintmenu[@]}"; do
    case $selecta in
      "change password")
        echo
        echo "change password 🪄"
        echo
        passwd
        echo
        echo
      ;;
      "shutdown network")
        echo
        echo "stopping networking service 🪄"
        echo
        systemctl stop networking
        echo
        echo
      ;;
      "shutdown ssh")
        echo
        echo "shutdown ssh 🪄"
        echo
        echo "shutdown sshd"
        systemctl stop sshd
        echo
        echo
      ;;
      "list all users and password hashes")
        echo
        echo "list all users 🪄"
        echo
        cat /etc/shadow | while read line; do 
          echo $line;
          sleep 1;
        done
        echo
        echo
      ;;
      "change user password")
        echo
        echo "change user password 🪄"
        echo
        echo "enter username to change password for:"
        read changeuserpass
        echo "changing password for $changeuserpass"
        echo
        passwd $changeuserpass
        echo
        echo
      ;;
      "power off system")
        shutdown -h now
      ;;
      "restart network")
        echo
        echo "restart network 🪄"
        echo
        systemctl restart networking
        echo
        echo
      ;;
      "restart ssh")
        echo
        echo "restart sshd 🪄"
        echo
        systemctl restart sshd
        echo
        echo
      ;;
      "restart cli session")
        clear
        echo "User exit called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done

}

monmenu () {
  PS3='admin cli | monitor options <<< number seclection ⛁)  '
  maintmenu=("top processes" "processes total count" "uptime" "open files count" "disk usage" "inode usage" "restart cli session")
  select selecta in "${maintmenu[@]}"; do
    case $selecta in
      "top processes")
         top
      ;;
      "processes total count")
        echo
        echo "processes total count 🪄"
        echo
        ps auxwww | wc -l
        echo
        echo
      ;;
      "uptime")
        echo
        echo "uptime 🪄"
        echo
        uptime
        echo
        echo
      ;;
      "open files count")
        echo
        echo "open files count 🪄"
        echo
        lsof | wc -l
        echo
        echo
      ;;
      "disk usage")
        echo
        echo "disk usage 🪄"
        echo
        df -h
        echo
        echo
      ;;
      "inode usage")
        echo
        echo "inode usage 🪄"
        echo
        df -i
        echo
        echo
      ;;
      "restart cli session")
        clear
        echo "User exit called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done

}

datamenu () {
  PS3='admin cli | data options <<< number seclection ⛁)  '
  maintmenu=("read log files" "search in logs for string" "last 20 users" "kernel buffer read" "restart cli session")
  select selecta in "${maintmenu[@]}"; do
    case $selecta in
      "top processes")
         top
      ;;
      "read log files")
        echo
        echo "read log files 🪄"
        echo
        cat /var/log/*.log /var/log/messages | while read line; do
          echo "$line"
          sleep 1
        done
        zcat /var/log/*.gz | while read line; do
          echo "$line"
          sleep 1
        done
        echo
        echo
      ;;
      "search in logs for string")
        echo
        echo "search log files for string 🪄"
        echo
        echo "enter the string to search for:"
        read searchstring
        echo
        echo "searching in /var/log/ for matches of $searchstring now, not case sensitive..."
        echo
        grep -iR "$searchstring" /var/log/ | while read line; do
          echo "$line"
        done
        echo
        echo
      ;;
      "last 20 users")
        echo
        echo "last twnenty users 🪄"
        echo
        last | head -n20
        echo
        echo
      ;;
      "kernel buffer read")
        echo
        echo "kernel buffer read 🪄"
        echo
        dmesg | while read line; do
          echo "$line"
          sleep 1
        done
        echo
        echo
      ;;
      "restart cli session")
        clear
        echo "User exit called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done

}
selfproc () {
  export NUMAPROC="$(whoami)$(date +%Y%m%d%H%M%S%N)"
  clear
  echo
  uname -a
  timestamp=$(date +%Y%m%d%H%M%S)
  echo $timestamp
  uptime
  echo "--------------------------------------+"
  echo " 👑 Your Grace 👑 "
  echo
  echo -e "Administrative console for $(hostname)\e[1:32m activated.\e[0m"
  echo "+++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
  PS3='admin cli <<< number seclection ⛁)  '
  mainmenu=("maintenance" "services" "users" "security" "monitoring" "data" "restart cli session")
  select selecta in "${mainmenu[@]}"; do
    case $selecta in
      "maintenance")
        clear
        echo
        echo "Maintenance options >>>"
        echo
        maintmenu
      ;;
      "services")
        echo "Do services stuff here."
      ;;
      "users")
        echo
        echo "User management options >>>"
        echo
        usersmenu
      ;;
      "security")
        echo
        echo "Security options >>>"
        echo
        secmenu
      ;;
      "monitoring")
        echo
        echo "User management options >>>"
        echo
        monmenu
      ;;
      "data")
        echo
        echo "Data options >>>"
        echo
        datamenu
      ;;
      "restart cli session")
        clear
        echo "User exit called. Good byte your grace ~ "
        trapexit
      ;;
    *) echo "invalid option $REPLY";;
    esac
  done
}

trapexit () {
  /etc/your_grace.runtime
}

trap trapexit HUP TERM INT

selfproc
